module iota.controls.backend.windows;
//Contains XInput bindings
version (Windows):

import core.sys.windows.windows;
import core.sys.windows.wtypes;

struct XINPUT_BATTERY_INFORMATION {
	BYTE BatteryType;
	BYTE BatteryLevel;
}

enum XINPUT_BATTERY_TYPE : BYTE {
	BATTERY_TYPE_DISCONNECTED,
	BATTERY_TYPE_WIRED,
	BATTERY_TYPE_ALKALINE,
	BATTERY_TYPE_NIMH,
	BATTERY_TYPE_UNKNOWN
}

enum XINPUT_BATTERY_LEVEL : BYTE {
	BATTERY_LEVEL_EMPTY,
	BATTERY_LEVEL_LOW,
	BATTERY_LEVEL_MEDIUM,
	BATTERY_LEVEL_FULL
}

struct XINPUT_CAPABILITIES {
	BYTE				Type;
	BYTE				SubType;
	WORD				Flags;
	XINPUT_GAMEPAD		Gamepad;
	XINPUT_VIBRATION	Vibration;
}

enum XINPUT_DEVTYPE : BYTE {
	XINPUT_DEVSUBTYPE_UNKNOWN = 0x00,
	XINPUT_DEVTYPE_GAMEPAD = 0x01,
	XINPUT_DEVSUBTYPE_GAMEPAD = XINPUT_DEVTYPE_GAMEPAD,
	XINPUT_DEVSUBTYPE_WHEEL = 0x02,
	XINPUT_DEVSUBTYPE_ARCADE_STICK = 0x03,
	XINPUT_DEVSUBTYPE_FLIGHT_STICK = 0x04,
	XINPUT_DEVSUBTYPE_DANCE_PAD = 0x05,
	XINPUT_DEVSUBTYPE_GUITAR = 0x06,
	XINPUT_DEVSUBTYPE_GUITAR_ALTERNATE = 0x07,
	XINPUT_DEVSUBTYPE_DRUM_KIT = 0x08,
	XINPUT_DEVSUBTYPE_GUITAR_BASS = 0x0B,
	XINPUT_DEVSUBTYPE_ARCADE_PAD = 0x13,
}

enum XINPUT_CAPS : WORD {
	XINPUT_CAPS_VOICE_SUPPORTED = 0x0004,
	XINPUT_CAPS_FFB_SUPPORTED = 0x0001,
	XINPUT_CAPS_WIRELESS = 0x0002,
	XINPUT_CAPS_PMD_SUPPORTED = 0x0008,
	XINPUT_CAPS_NO_NAVIGATION = 0x0010,
}

struct XINPUT_VIBRATION {
	WORD wLeftMotorSpeed;
	WORD wRightMotorSpeed;
}

struct XINPUT_STATE {
	DWORD			dwPacketNumber;
	XINPUT_GAMEPAD	Gamepad;
}

struct XINPUT_GAMEPAD {
	WORD	wButtons;
	BYTE	bLeftTrigger;
	BYTE	bRightTrigger;
	SHORT	sThumbLX;
	SHORT	sThumbLY;
	SHORT	sThumbRX;
	SHORT	sThumbRY;
}

enum XINPUT_BUTTONS : WORD {
	XINPUT_GAMEPAD_DPAD_UP			= 0x0001,
	XINPUT_GAMEPAD_DPAD_DOWN		= 0x0002,
	XINPUT_GAMEPAD_DPAD_LEFT		= 0x0004,
	XINPUT_GAMEPAD_DPAD_RIGHT		= 0x0008,
	XINPUT_GAMEPAD_START			= 0x0010,
	XINPUT_GAMEPAD_BACK				= 0x0020,
	XINPUT_GAMEPAD_LEFT_THUMB		= 0x0040,
	XINPUT_GAMEPAD_RIGHT_THUMB		= 0x0080,
	XINPUT_GAMEPAD_LEFT_SHOULDER	= 0x0100,
	XINPUT_GAMEPAD_RIGHT_SHOULDER	= 0x0200,
	XINPUT_GAMEPAD_A				= 0x1000,
	XINPUT_GAMEPAD_B				= 0x2000,
	XINPUT_GAMEPAD_X				= 0x4000,
	XINPUT_GAMEPAD_Y				= 0x8000,
}

struct XINPUT_KEYSTROKE {
	WORD	VirtualKey;
	WCHAR	Unicode;
	WORD	Flags;
	BYTE	UserIndex;
	BYTE	HidCode;
}

enum XINPUT_VK : WORD {
	VK_PAD_A = 0x5800,
	VK_PAD_B = 0x5801,
	VK_PAD_X = 0x5802,
	VK_PAD_Y = 0x5803,
	VK_PAD_RSHOULDER = 0x5804,
	VK_PAD_LSHOULDER = 0x5805,
	VK_PAD_LTRIGGER = 0x5806,
	VK_PAD_RTRIGGER = 0x5807,

	VK_PAD_DPAD_UP = 0x5810,
	VK_PAD_DPAD_DOWN = 0x5811,
	VK_PAD_DPAD_LEFT = 0x5812,
	VK_PAD_DPAD_RIGHT = 0x5813,
	VK_PAD_START = 0x5814,
	VK_PAD_BACK = 0x5815,
	VK_PAD_LTHUMB_PRESS = 0x5816,
	VK_PAD_RTHUMB_PRESS = 0x5817,

	VK_PAD_LTHUMB_UP = 0x5820,
	VK_PAD_LTHUMB_DOWN = 0x5821,
	VK_PAD_LTHUMB_RIGHT = 0x5822,
	VK_PAD_LTHUMB_LEFT = 0x5823,
	VK_PAD_LTHUMB_UPLEFT = 0x5824,
	VK_PAD_LTHUMB_UPRIGHT = 0x5825,
	VK_PAD_LTHUMB_DOWNRIGHT = 0x5826,
	VK_PAD_LTHUMB_DOWNLEFT = 0x5827,

	VK_PAD_RTHUMB_UP = 0x5830,
	VK_PAD_RTHUMB_DOWN = 0x5831,
	VK_PAD_RTHUMB_RIGHT = 0x5832,
	VK_PAD_RTHUMB_LEFT = 0x5833,
	VK_PAD_RTHUMB_UPLEFT = 0x5834,
	VK_PAD_RTHUMB_UPRIGHT = 0x5835,
	VK_PAD_RTHUMB_DOWNRIGHT = 0x5836,
	VK_PAD_RTHUMB_DOWNLEFT = 0x5837,
}

public @nogc nothrow extern(Windows) {
	void XInputEnable(BOOL enable);
	DWORD XInputGetAudioDeviceIds(DWORD  dwUserIndex, LPWSTR pRenderDeviceId, UINT* pRenderCount, LPWSTR pCaptureDeviceId, 
			UINT *pCaptureCount);
	DWORD XInputGetBatteryInformation(DWORD dwUserIndex, BYTE devType, XINPUT_BATTERY_INFORMATION* pBatteryInformation);
	DWORD XInputGetCapabilities(DWORD dwUserIndex, DWORD dwFlags, XINPUT_CAPABILITIES* pCapabilities);
	DWORD XInputGetState(DWORD dwUserIndex, XINPUT_STATE* pState);
	DWORD XInputSetState(DWORD dwUserIndex, XINPUT_VIBRATION* pVibration);
}